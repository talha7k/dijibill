// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {database} from '../models';
import {main} from '../models';
import {time} from '../models';

export function CreateCompany(arg1:database.Company):Promise<void>;

export function CreateCustomer(arg1:database.Customer):Promise<void>;

export function CreateInvoice(arg1:database.SalesInvoice):Promise<void>;

export function CreatePayment(arg1:database.Payment):Promise<void>;

export function CreatePaymentType(arg1:database.PaymentType):Promise<void>;

export function CreateProduct(arg1:database.Product):Promise<void>;

export function CreateProductCategory(arg1:database.ProductCategory):Promise<void>;

export function CreatePurchaseInvoice(arg1:database.PurchaseInvoice):Promise<void>;

export function CreatePurchaseProduct(arg1:database.PurchaseProduct):Promise<void>;

export function CreatePurchaseProductCategory(arg1:database.PurchaseProductCategory):Promise<void>;

export function CreateSalesCategory(arg1:database.SalesCategory):Promise<void>;

export function CreateSalesInvoice(arg1:database.SalesInvoice):Promise<database.SalesInvoice>;

export function CreateSampleData():Promise<void>;

export function CreateSupplier(arg1:database.Supplier):Promise<void>;

export function CreateTaxRate(arg1:database.TaxRate):Promise<void>;

export function CreateUnitOfMeasurement(arg1:database.UnitOfMeasurement):Promise<void>;

export function CreateUser(arg1:database.User):Promise<void>;

export function DeleteCustomer(arg1:number):Promise<void>;

export function DeleteFile(arg1:number):Promise<void>;

export function DeletePayment(arg1:number):Promise<void>;

export function DeletePaymentType(arg1:number):Promise<void>;

export function DeleteProduct(arg1:number):Promise<void>;

export function DeletePurchaseInvoice(arg1:number):Promise<void>;

export function DeletePurchaseProduct(arg1:number):Promise<void>;

export function DeletePurchaseProductCategory(arg1:number):Promise<void>;

export function DeleteSalesCategory(arg1:number):Promise<void>;

export function DeleteSalesInvoice(arg1:number):Promise<void>;

export function DeleteSupplier(arg1:number):Promise<void>;

export function DeleteTaxRate(arg1:number):Promise<void>;

export function DeleteUnitOfMeasurement(arg1:number):Promise<void>;

export function DeleteUser(arg1:number):Promise<void>;

export function DownloadInvoicePDF(arg1:number):Promise<void>;

export function GenerateInvoiceHTML(arg1:number):Promise<string>;

export function GenerateInvoiceHTMLArabic(arg1:number):Promise<string>;

export function GenerateInvoiceHTMLBilingual(arg1:number):Promise<string>;

export function GenerateInvoiceHTMLEnglish(arg1:number):Promise<string>;

export function GenerateInvoicePDF(arg1:number):Promise<string>;

export function GenerateSampleQRCode():Promise<string>;

export function GetAuthContext():Promise<main.AuthContext>;

export function GetCompanies():Promise<Array<database.Company>>;

export function GetCompany():Promise<database.Company>;

export function GetCompanyByID(arg1:number):Promise<database.Company>;

export function GetCompanyLogoAsBase64(arg1:number):Promise<string>;

export function GetCompressionSettings():Promise<Record<string, any>>;

export function GetCurrentUser():Promise<database.User>;

export function GetCustomerByID(arg1:number):Promise<database.Customer>;

export function GetCustomers():Promise<Array<database.Customer>>;

export function GetDefaultProductSettings():Promise<database.DefaultProductSettings>;

export function GetFileContent(arg1:number):Promise<Array<number>>;

export function GetFilesByEntity(arg1:string,arg2:number):Promise<Array<main.FileMetadata>>;

export function GetInvoiceByID(arg1:number):Promise<database.SalesInvoice>;

export function GetInvoices():Promise<Array<database.SalesInvoice>>;

export function GetOpenSalesInvoices():Promise<Array<database.SalesInvoice>>;

export function GetPaymentByID(arg1:number):Promise<database.Payment>;

export function GetPaymentTypes():Promise<Array<database.PaymentType>>;

export function GetPayments():Promise<Array<database.Payment>>;

export function GetPaymentsByInvoiceID(arg1:number):Promise<Array<database.Payment>>;

export function GetProductCategories():Promise<Array<database.ProductCategory>>;

export function GetProducts():Promise<Array<database.Product>>;

export function GetPurchaseInvoiceByID(arg1:number):Promise<database.PurchaseInvoice>;

export function GetPurchaseInvoices():Promise<Array<database.PurchaseInvoice>>;

export function GetPurchaseProductCategories():Promise<Array<database.PurchaseProductCategory>>;

export function GetPurchaseProducts():Promise<Array<database.PurchaseProduct>>;

export function GetQRCodeInfo(arg1:string):Promise<Record<string, any>>;

export function GetSalesCategories():Promise<Array<database.SalesCategory>>;

export function GetSalesInvoiceByID(arg1:number):Promise<database.SalesInvoice>;

export function GetSalesInvoices():Promise<Array<database.SalesInvoice>>;

export function GetSupplierByID(arg1:number):Promise<database.Supplier>;

export function GetSuppliers():Promise<Array<database.Supplier>>;

export function GetSystemSettings():Promise<database.SystemSettings>;

export function GetTaxRates():Promise<Array<database.TaxRate>>;

export function GetTodaysSales():Promise<Record<string, any>>;

export function GetTopSellingProducts():Promise<Array<Record<string, any>>>;

export function GetUnitsOfMeasurement():Promise<Array<database.UnitOfMeasurement>>;

export function GetUsersByCompany(arg1:number):Promise<Array<database.User>>;

export function Greet(arg1:string):Promise<string>;

export function Login(arg1:string,arg2:string):Promise<main.AuthContext>;

export function Logout():Promise<void>;

export function MarkIntroAsViewed(arg1:number):Promise<void>;

export function MarkPurchaseInvoiceReceived(arg1:number):Promise<void>;

export function OpenPDFInViewer(arg1:string):Promise<void>;

export function PopulateSampleData():Promise<void>;

export function PrintInvoiceHTML(arg1:number):Promise<void>;

export function ResetIntroStatus(arg1:number):Promise<void>;

export function SaveInvoiceHTML(arg1:number):Promise<void>;

export function SaveInvoiceHTMLArabic(arg1:number):Promise<void>;

export function SaveInvoiceHTMLBilingual(arg1:number):Promise<void>;

export function SaveInvoiceHTMLEnglish(arg1:number):Promise<void>;

export function ShowError(arg1:string,arg2:string):Promise<void>;

export function ShowMessage(arg1:string,arg2:string):Promise<void>;

export function ShowSaveDialog(arg1:string):Promise<string>;

export function Signup(arg1:main.SignupRequest):Promise<main.AuthContext>;

export function SwitchCompany(arg1:number):Promise<void>;

export function TestCustomerNAHandling():Promise<void>;

export function UpdateCompany(arg1:database.Company):Promise<void>;

export function UpdateCompressionSettings(arg1:number,arg2:number,arg3:number,arg4:number,arg5:number):Promise<void>;

export function UpdateCustomer(arg1:database.Customer):Promise<void>;

export function UpdateDefaultProductSettings(arg1:database.DefaultProductSettings):Promise<void>;

export function UpdateLastBackupTime(arg1:time.Time):Promise<void>;

export function UpdatePayment(arg1:database.Payment):Promise<void>;

export function UpdatePaymentType(arg1:database.PaymentType):Promise<void>;

export function UpdateProduct(arg1:database.Product):Promise<void>;

export function UpdatePurchaseInvoice(arg1:database.PurchaseInvoice):Promise<void>;

export function UpdatePurchaseProduct(arg1:database.PurchaseProduct):Promise<void>;

export function UpdatePurchaseProductCategory(arg1:database.PurchaseProductCategory):Promise<void>;

export function UpdateSalesCategory(arg1:database.SalesCategory):Promise<void>;

export function UpdateSalesInvoice(arg1:database.SalesInvoice):Promise<void>;

export function UpdateSupplier(arg1:database.Supplier):Promise<void>;

export function UpdateSystemSettings(arg1:database.SystemSettings):Promise<void>;

export function UpdateTaxRate(arg1:database.TaxRate):Promise<void>;

export function UpdateUnitOfMeasurement(arg1:database.UnitOfMeasurement):Promise<void>;

export function UpdateUser(arg1:database.User):Promise<void>;

export function UploadCompanyLogo():Promise<number>;

export function UploadCompanyLogoFromData(arg1:string,arg2:string,arg3:string):Promise<number>;

export function UploadFile(arg1:string,arg2:string,arg3:number):Promise<string>;

export function ValidateZATCAQRCode(arg1:string):Promise<void>;

export function ViewInvoiceHTML(arg1:number):Promise<void>;

export function ViewInvoiceHTMLArabic(arg1:number):Promise<void>;

export function ViewInvoiceHTMLBilingual(arg1:number):Promise<void>;

export function ViewInvoiceHTMLEnglish(arg1:number):Promise<void>;

export function ViewInvoicePDF(arg1:number):Promise<void>;
